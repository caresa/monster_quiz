function MonsterQuiz (quizId) {
  this.init(quizId);
}
MonsterQuiz.prototype = {
  quizList: [],
  quizId: null,
  quizSelected: null,
  questionSelected: null,
  questionList: [],
  selectedOptions: [],
  compiledResults: {},
  sortedResults: [],
  init: function (quizId) {
    var self = this;
    this.quizId = quizId;


    $('body').on('click', '.quizDiv', function () {
      // self.getQuizQuestions($(this).attr('value'));
      self.quizId = $(this).attr('value');
      window.location = '/quizzes/' + self.quizId + '/questions';
    });

    $('body').on('click', '#saveContinue', function () {

     //self.nextQuestion = $(this).attr('value');
      self.saveAnswer();
    });

    // event for save and contintue that calls saveAnswer
  },
  getQuizzes: function (callback) {
    var self = this;
    $.ajax({
      url:'/quizzes',
      success: function(data){
        for(var i in data) {
          self.quizList.push(new Quiz(data[i]));
        }
        self.showQuizList();
      }
    });
  },
  setQuizQuestions: function (data) {
    var self = this;

    for(var i in data) {
      self.questionList.push(new Question(data[i]));
    }
  },
  showQuizList: function () {
    for(var i in this.quizList) {
     $('body').append('<div class="quizDiv" value="'+this.quizList[i].id+'">'+this.quizList[i].label+'</div>');
    }
  },
  startQuiz: function () {
    this.questionSelected = 0;
    this.showQuestion();
  },
  showQuestion: function () {
    var q = this.questionList[this.questionSelected];
    $('.questionText').html(q.question);
    this.showOptions();
  },
  showOptions: function () {
    var q = this.questionList[this.questionSelected];
    var radios = '';
    for(var i in q.options) {
      var option = q.options[i];
      radios = radios+'<p><input id="'+option.id+'" name="group1" value="'+option.id+'" hidden type="radio">'+
                  '<label for="'+option.id+'">'+option.option+'</label></p>';
    }

    $('.radioGroup').html(radios);
  },
  saveAnswer: function () {
    var option = $('input[name="group1"]:checked').val();
    if(option != undefined){
      this.selectedOptions.push(option);
      console.log(this.selectedOptions);
      this.nextQuestion();
      }else{
       alert('a');
      }
  },
  nextQuestion: function () {
    this.questionSelected ++;
    if(this.questionSelected < this.questionList.length){
      this.showQuestion();

    }else{

      //function call to show score and blurb
      // showScore();
      window.location = '/quizzes/' + this.quizId + '/results?options='+this.selectedOptions;
    }
  },
  compileResults: function (results) {
    var r;

    for(var i in results) {
      r = results[i];

      if(this.compiledResults[r.z_type] == undefined) {
        this.compiledResults[r.z_type] = 0;
      }
      this.compiledResults[r.z_type] += r.score;
    }

    for(i in this.compiledResults) {
      r = this.compiledResults[i];
      this.sortedResults.push({'name': i, 'value': r});
    }
    this.sortedResults.sort(function(a, b) {
      if (a.value < b.value) {
        return 1;
      }
      if (a.value > b.value) {
        return -1;
      }
      return 0;
    });
  },
  showResults: function () {
    for(var i in this.sortedResults) {
      $('ul.results').append('<li id=:res1">'+this.sortedResults[i].value+': '+this.sortedResults[i].name+'</li>');
    }
  }
};

// Quiz model
var Quiz = function (data) {
  this.init(data);
}
Quiz.prototype = {
  id: null,
  label: null,
  questions: null,
  init: function (data) {
    this.id = data.id;
    this.label = data.label;
  },
  save: function () {
    // ajax to save here
  },
  display: function () {
    // ajax to save here
  }
};

//Question model
var Question = function(data){
  this.init(data);
}
Question.prototype = {
  id: null,
  question: null,
  options: null,
  init: function(data){
    this.id = data.id;
    this.question = data.question;

    this.options = [];
    for(var i in data.options) {
      this.options.push(new Option(data.options[i]));
    }
  }
}

//Option model
var Option = function(data){
  this.init(data);
}
Option.prototype = {
  id: null,
  option: null,
  init: function(data){
    this.id = data.id;
    this.option = data.label;
  }
}

// var MonsterQuestion.prototype = {
//   questionList: null,
//   init; function(questions){
//     var self = this;

//       $
//   }
// }
